{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Tech_Projects\\\\React Native\\\\Udemy\\\\rn-starter\\\\src\\\\screens\\\\04-State\\\\ColorScreen.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  console.log(colors);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, React.createElement(Button, {\n    title: \"Add a color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Fixed Color\"), React.createElement(View, {\n    style: {\n      height: 100,\n      width: 100,\n      backgroundColor: 'rgb(0,255,0)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Random Color\"), React.createElement(View, {\n    style: {\n      height: 100,\n      width: 100,\n      backgroundColor: randomRgb()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 24\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  console.log(\"rgb(\" + red + \", \" + green + \", \" + blue + \")\");\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["E:/Tech_Projects/React Native/Udemy/rn-starter/src/screens/04-State/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","console","log","randomRgb","height","width","backgroundColor","item","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACMD,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfE,MADe;AAAA,MACPC,SADO;;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,OAAO,EAAE,mBAAM;AACvCC,MAAAA,SAAS,8BAAKD,MAAL,IAAaI,SAAS,EAAtB,GAAT;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAIH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJG,EAKH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE,GAArB;AAA0BC,MAAAA,eAAe,EAAE;AAA3C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALG,EAMH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANG,EAOH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACF,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE,GAArB;AAA0BC,MAAAA,eAAe,EAAEH,SAAS;AAApD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPG,EAQH,oBAAC,QAAD;AACI,IAAA,IAAI,EAAIJ,MADZ;AAEI,IAAA,UAAU,EAAE,0BAAY;AAAA,UAAVQ,IAAU,QAAVA,IAAU;AACpB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,MAAM,EAAE,GAAT;AAAcC,UAAAA,KAAK,EAAE,GAArB;AAA0BC,UAAAA,eAAe,EAAEC;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARG,CAAP;AAeH,CAnBD;;AAqBA,IAAMJ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEAV,EAAAA,OAAO,CAACC,GAAR,UAAmBM,GAAnB,UAA2BI,KAA3B,UAAqCC,IAArC;AAEA,kBAAcL,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AACH,CARD;;AAUA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAelB,WAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Text, StyleSheet, View, Button, FlatList } from \"react-native\";\r\n\r\nconst ColorScreen = () => {\r\n    const [colors, setColors] = useState([])\r\n    console.log(colors)\r\n\r\n    return <View>\r\n        <Button title=\"Add a color\" onPress={() => {\r\n            setColors([...colors, randomRgb()])\r\n        }}/>\r\n        <Text>Fixed Color</Text>\r\n        <View style={{height: 100, width: 100, backgroundColor: 'rgb(0,255,0)'}} />\r\n        <Text>Random Color</Text>\r\n        <View style={{height: 100, width: 100, backgroundColor: randomRgb()}} />\r\n        <FlatList \r\n            data = {colors}\r\n            renderItem={({item}) => {\r\n                return <View style={{height: 100, width: 100, backgroundColor: item}} />\r\n            }}\r\n        />\r\n    </View>\r\n}\r\n\r\nconst randomRgb = () => {\r\n    const red = Math.floor(Math.random() * 256)\r\n    const green = Math.floor(Math.random() * 256)\r\n    const blue = Math.floor(Math.random() * 256)\r\n\r\n    console.log(`rgb(${red}, ${green}, ${blue})`)\r\n\r\n    return `rgb(${red}, ${green}, ${blue})`;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});\r\n\r\nexport default ColorScreen;"]},"metadata":{},"sourceType":"module"}